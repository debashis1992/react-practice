{"ast":null,"code":"var _jsxFileName = \"/Users/debashis/Documents/Documents and Notes/React/projects/react-practice/time-tracker/src/Timer.js\";\nimport React from 'react';\nimport './TimerItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = () => this.setState({\n      isToggleOn: false\n    });\n\n    this.handleChange = e => this.setState({\n      tempText: e.target.value\n    });\n\n    this.state = { ...props.info,\n      isToggleOn: false,\n      tempText: '',\n      isDeleted: false\n    };\n    this.tick = this.tick.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleStart() {\n    if (this.timerID !== undefined) {\n      console.log(\"Timer already started\");\n      return;\n    }\n\n    this.timerID = setInterval(this.tick, 1000);\n  }\n\n  handleStop() {\n    clearInterval(this.timerID);\n    this.setState({\n      initialTime: 0\n    });\n  }\n\n  handleEdit() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  tick() {\n    this.setState(prevState => ({\n      initialTime: prevState.initialTime + 1\n    }));\n  }\n\n  handleDelete() {}\n\n  handleSubmit() {\n    this.setState({\n      title: this.state.tempText,\n      isToggleOn: false\n    });\n  }\n\n  render() {\n    if (this.state.isDeleted) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", this.state.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Elapsed Time: \", this.state.initialTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), this.state.isToggleOn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Update title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.tempText,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/debashis/Documents/Documents and Notes/React/projects/react-practice/time-tracker/src/Timer.js"],"names":["React","Timer","Component","constructor","props","handleCancel","setState","isToggleOn","handleChange","e","tempText","target","value","state","info","isDeleted","tick","bind","handleStart","handleStop","handleEdit","handleSubmit","timerID","undefined","console","log","setInterval","clearInterval","initialTime","prevState","handleDelete","title","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TimerItem.css';\n\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {...props.info, isToggleOn: false, tempText:'', isDeleted: false};\n        this.tick = this.tick.bind(this);\n        this.handleStart = this.handleStart.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleStart() {\n        if(this.timerID!== undefined) {\n            console.log(\"Timer already started\")\n            return;\n        }\n        this.timerID = setInterval(this.tick, 1000);\n    }\n\n    handleStop() {\n        clearInterval(this.timerID);\n        this.setState({initialTime: 0})\n    }\n\n    handleEdit() {\n        this.setState(prevState => ({\n            isToggleOn: !prevState.isToggleOn\n        }))\n    }\n\n    tick() {\n        this.setState(prevState => ({\n            initialTime: prevState.initialTime + 1\n        }));\n    }\n\n    handleDelete() {\n\n    }\n\n    handleCancel = () => this.setState({isToggleOn: false})\n    handleChange = (e) => this.setState({tempText: e.target.value})\n\n    handleSubmit() {\n        this.setState({title: this.state.tempText, isToggleOn: false})\n    }\n\n    render() {\n        if(this.state.isDeleted) return null\n        return (\n            <div className=\"timer-item\">\n                <p>Title: {this.state.title}</p>\n                <p>Elapsed Time: {this.state.initialTime}</p>\n                <button onClick={this.handleStart}>Start</button>\n                <button onClick={this.handleStop}>Stop</button>\n                <button onClick={this.handleEdit}>Edit</button>\n                <button onClick={this.handleDelete}>Delete</button>\n                {this.state.isToggleOn && \n                <div>\n                    <label>\n                        Update title:\n                        <input type=\"text\" value={this.state.tempText} onChange={this.handleChange}/>\n                    </label>\n                    <button onClick={this.handleSubmit}>Submit</button>\n                    <button onClick={this.handleCancel}>Cancel</button>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}