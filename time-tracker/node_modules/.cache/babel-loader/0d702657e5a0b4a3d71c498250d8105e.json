{"ast":null,"code":"var _jsxFileName = \"/Users/debashis/Documents/Documents and Notes/React/projects/react-practice/time-tracker/src/TimerDashboard.js\";\nimport React from 'react';\nimport TimersList from './TimersList';\nimport './TimerDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TimerDashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      info: information,\n      isToggleAddTimer: false,\n      tempField: ''\n    };\n\n    this.handleAddTimer = () => {\n      this.setState(prevState => ({\n        isToggleAddTimer: !prevState.isToggleAddTimer\n      }));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        tempField: e.target.value\n      });\n    };\n\n    this.handleAddNewTimerItem = () => {\n      this.setState(prevState => ({\n        info: prevState.info.concat({\n          title: prevState.tempField,\n          initialTime: 0\n        }),\n        isToggleAddTimer: false\n      }));\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        isToggleAddTimer: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TimerDashboad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimersList, {\n        information: this.state.info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleAddTimer,\n        children: \"Add Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), this.state.isToggleAddTimer && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.tempField,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleAddNewTimerItem,\n          children: \"Add new Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst information = [{\n  title: \"Learn React\",\n  initialTime: 0\n}, {\n  title: \"Learn JS\",\n  initialTime: 0\n}, {\n  title: \"Learn Datastructures\",\n  initialTime: 0\n}, {\n  title: \"Learn Algorithms\",\n  initialTime: 0\n}, {\n  title: \"Learn Git Advances\",\n  initialTime: 0\n}];\nexport default TimerDashboard;","map":{"version":3,"sources":["/Users/debashis/Documents/Documents and Notes/React/projects/react-practice/time-tracker/src/TimerDashboard.js"],"names":["React","TimersList","TimerDashboard","Component","state","info","information","isToggleAddTimer","tempField","handleAddTimer","setState","prevState","handleChange","e","target","value","handleAddNewTimerItem","concat","title","initialTime","handleCancel","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACJC,MAAAA,IAAI,EAAEC,WADF;AAEJC,MAAAA,gBAAgB,EAAE,KAFd;AAGJC,MAAAA,SAAS,EAAE;AAHP,KADiC;;AAAA,SAOzCC,cAPyC,GAOxB,MAAM;AACnB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBJ,QAAAA,gBAAgB,EAAE,CAACI,SAAS,CAACJ;AADL,OAAL,CAAvB;AAGH,KAXwC;;AAAA,SAazCK,YAbyC,GAazBC,CAAD,IAAO;AAClB,WAAKH,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAGK,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd;AACH,KAfwC;;AAAA,SAiBzCC,qBAjByC,GAiBjB,MAAM;AAE1B,WAAKN,QAAL,CAAcC,SAAS,KAAK;AACxBN,QAAAA,IAAI,EAAEM,SAAS,CAACN,IAAV,CAAeY,MAAf,CAAsB;AAACC,UAAAA,KAAK,EAAEP,SAAS,CAACH,SAAlB;AAA6BW,UAAAA,WAAW,EAAE;AAA1C,SAAtB,CADkB;AAExBZ,QAAAA,gBAAgB,EAAG;AAFK,OAAL,CAAvB;AAIH,KAvBwC;;AAAA,SAyBzCa,YAzByC,GAyB1B,MAAM;AACjB,WAAKV,QAAL,CAAc;AAACH,QAAAA,gBAAgB,EAAG;AAApB,OAAd;AACH,KA3BwC;AAAA;;AA6BzCc,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,WAAW,EAAE,KAAKjB,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKI,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIK,KAAKL,KAAL,CAAWG,gBAAX,iBACD;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,SAArC;AAAgD,UAAA,QAAQ,EAAE,KAAKI;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,KAAKI,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAE,KAAKI,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA5CwC;;AA8C7C,MAAMd,WAAW,GAAG,CAChB;AAACY,EAAAA,KAAK,EAAE,aAAR;AAAuBC,EAAAA,WAAW,EAAE;AAApC,CADgB,EAEhB;AAACD,EAAAA,KAAK,EAAE,UAAR;AAAoBC,EAAAA,WAAW,EAAE;AAAjC,CAFgB,EAGhB;AAACD,EAAAA,KAAK,EAAE,sBAAR;AAAgCC,EAAAA,WAAW,EAAE;AAA7C,CAHgB,EAIhB;AAACD,EAAAA,KAAK,EAAE,kBAAR;AAA4BC,EAAAA,WAAW,EAAE;AAAzC,CAJgB,EAKhB;AAACD,EAAAA,KAAK,EAAE,oBAAR;AAA8BC,EAAAA,WAAW,EAAE;AAA3C,CALgB,CAApB;AAQA,eAAejB,cAAf","sourcesContent":["import React from 'react';\nimport TimersList from './TimersList';\nimport './TimerDashboard.css';\n\nclass TimerDashboard extends React.Component {\n    state = {\n        info: information,\n        isToggleAddTimer: false,\n        tempField: ''\n    }\n\n    handleAddTimer = () => {\n        this.setState(prevState => ({\n            isToggleAddTimer: !prevState.isToggleAddTimer\n        }))\n    }\n\n    handleChange = (e) => {\n        this.setState({tempField : e.target.value})\n    }\n\n    handleAddNewTimerItem = () => {\n        \n        this.setState(prevState => ({\n            info: prevState.info.concat({title: prevState.tempField, initialTime: 0}),\n            isToggleAddTimer : false\n        }))\n    }\n\n    handleCancel = () => {\n        this.setState({isToggleAddTimer : false})\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard\">\n                <h3>TimerDashboad</h3>\n                <TimersList information={this.state.info}/>\n                <button onClick={this.handleAddTimer}>Add Timer</button>\n                {this.state.isToggleAddTimer && \n                <div>\n                    <input type=\"text\" value={this.state.tempField} onChange={this.handleChange} />\n                    <button onClick={this.handleAddNewTimerItem}>Add new Timer</button>\n                    <button onClick={this.handleCancel}>Cancel</button>\n                </div>}\n            </div>\n            \n        )\n    }\n}\nconst information = [\n    {title: \"Learn React\", initialTime: 0},\n    {title: \"Learn JS\", initialTime: 0},\n    {title: \"Learn Datastructures\", initialTime: 0},\n    {title: \"Learn Algorithms\", initialTime: 0},\n    {title: \"Learn Git Advances\", initialTime: 0},\n]\n\nexport default TimerDashboard;"]},"metadata":{},"sourceType":"module"}