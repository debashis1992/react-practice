{"ast":null,"code":"var _jsxFileName = \"/Users/debashis/Documents/Documents and Notes/React/projects/time-tracker/src/Timer.js\";\nimport React from 'react';\nimport './TimerItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.info\n    };\n    this.tick = this.tick.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n\n  handleStart() {\n    if (this.timerID !== undefined) {\n      console.log(\"Timer already started\");\n      return;\n    }\n\n    this.timerID = setInterval(this.tick, 1000);\n  }\n\n  handleStop() {\n    clearInterval(this.timerID);\n    this.setState({\n      initialTime: 0\n    });\n  }\n\n  tick() {\n    this.setState(prevState => ({\n      initialTime: prevState.initialTime + 1\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", this.state.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Elapsed Time: \", this.state.initialTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/debashis/Documents/Documents and Notes/React/projects/time-tracker/src/Timer.js"],"names":["React","Timer","Component","constructor","props","state","info","tick","bind","handleStart","handleStop","timerID","undefined","console","log","setInterval","clearInterval","setState","initialTime","prevState","render","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAC,GAAGD,KAAK,CAACE;AAAV,KAAb;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,QAAG,KAAKE,OAAL,KAAgBC,SAAnB,EAA8B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA;AACH;;AACD,SAAKH,OAAL,GAAeI,WAAW,CAAC,KAAKR,IAAN,EAAY,IAAZ,CAA1B;AACH;;AAEDG,EAAAA,UAAU,GAAG;AACTM,IAAAA,aAAa,CAAC,KAAKL,OAAN,CAAb;AACA,SAAKM,QAAL,CAAc;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAd;AACH;;AAEDX,EAAAA,IAAI,GAAG;AACH,SAAKU,QAAL,CAAcE,SAAS,KAAK;AACxBD,MAAAA,WAAW,EAAEC,SAAS,CAACD,WAAV,GAAwB;AADb,KAAL,CAAvB;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA,8BAAW,KAAKf,KAAL,CAAWgB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,qCAAkB,KAAKhB,KAAL,CAAWa,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKT,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AApC+B;;AAuCpC,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport './TimerItem.css';\n\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {...props.info};\n        this.tick = this.tick.bind(this);\n        this.handleStart = this.handleStart.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n    }\n    handleStart() {\n        if(this.timerID!== undefined) {\n            console.log(\"Timer already started\")\n            return;\n        }\n        this.timerID = setInterval(this.tick, 1000);\n    }\n\n    handleStop() {\n        clearInterval(this.timerID);\n        this.setState({initialTime: 0})\n    }\n\n    tick() {\n        this.setState(prevState => ({\n            initialTime: prevState.initialTime + 1\n        }));\n    }\n\n    render() {\n        return (\n            <div className=\"timer-item\">\n                <p>Title: {this.state.title}</p>\n                <p>Elapsed Time: {this.state.initialTime}</p>\n                <button onClick={this.handleStart}>Start</button>\n                <button onClick={this.handleStop}>Stop</button>\n            </div>\n        )\n    }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}